{
 "cells": [
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-01-18T13:44:12.426900Z",
     "start_time": "2025-01-18T13:44:12.418691Z"
    }
   },
   "cell_type": "code",
   "source": [
    "import os\n",
    "os.chdir('/Users/thom/Personnel/Scolaire/MIA/snake2-beta-insa-main/data/teamExperiments')"
   ],
   "id": "12404158179eeec0",
   "outputs": [],
   "execution_count": 1
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-01-18T13:44:15.259990Z",
     "start_time": "2025-01-18T13:44:12.641188Z"
    }
   },
   "cell_type": "code",
   "source": [
    "from attackDopel import*\n",
    "from evaluateSets.compareDistributions import *\n",
    "from visualisation import*"
   ],
   "id": "c8a35c7f731d424b",
   "outputs": [],
   "execution_count": 2
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-01-18T13:44:15.313207Z",
     "start_time": "2025-01-18T13:44:15.268308Z"
    }
   },
   "cell_type": "code",
   "source": [
    "print(len(syntheticData_Task1))\n",
    "print(len(rescale_distribution(publicData_Tasks34, syntheticData_Task1)))\n",
    "# plotDistributionByDay(publicData_Tasks34)\n",
    "# plotDistributionByDay(rescale_distribution(publicData_Tasks34, syntheticData_Task1))"
   ],
   "id": "944ee6b7d93343c",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50000\n",
      "50000\n"
     ]
    }
   ],
   "execution_count": 3
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-01-18T13:44:15.990035Z",
     "start_time": "2025-01-18T13:44:15.518433Z"
    }
   },
   "cell_type": "code",
   "source": [
    "JS_Clean = getJensenShannonDivergences(syntheticData_Task2, publicData_Tasks12)\n",
    "JS_Unclean = getJensenShannonDivergences(syntheticData_Task2, syntheticData_Task3)\n",
    "\n",
    "(getJensenShannonDivergences(syntheticData_Task2, syntheticData_Task1))\n",
    "plotSimpleDivergenceHistogram(syntheticData_Task2, syntheticData_Task1)"
   ],
   "id": "b44530f31e5f5b63",
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/thom/Personnel/Scolaire/MIA/snake2-beta-insa-main/data/teamExperiments/visualisation.py:73: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.barplot(data=data, palette=palette, legend=False)\n",
      "/Users/thom/Personnel/Scolaire/MIA/snake2-beta-insa-main/data/teamExperiments/visualisation.py:77: UserWarning: No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n",
      "  plt.legend(title=\"Dataset\")\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 4
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-01-18T13:44:16.058427Z",
     "start_time": "2025-01-18T13:44:16.039981Z"
    }
   },
   "cell_type": "code",
   "source": "syntheticData_Task2",
   "id": "935a3c5c7c35dd07",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "              0         1         2         3         4         5         6\n",
       "0      0.080301  0.134267  0.287874  0.148930  0.042609  0.006130  0.078799\n",
       "1      0.712761  0.581813  0.548498  0.549938  0.382480  0.503788  0.727633\n",
       "2      0.106849  0.017848  0.029854  0.112837  0.066116  0.056761  0.135643\n",
       "3      0.460123  0.640385  0.765068  0.516972  0.202322  0.210486  0.505332\n",
       "4      0.309510  0.330219  0.422271  0.287225  0.074299  0.024711  0.186387\n",
       "...         ...       ...       ...       ...       ...       ...       ...\n",
       "49995  0.225573  0.496251  0.600471  0.368305  0.192817  0.006098  0.003733\n",
       "49996  0.293452  0.329144  0.366574  0.317674  0.282863  0.351503  0.219785\n",
       "49997  0.240963  0.270849  0.358293  0.301452  0.166044  0.329037  0.199648\n",
       "49998  0.109018  0.098117  0.093446  0.022168  0.006831  0.015912  0.023338\n",
       "49999  0.222783  0.367280  0.361082  0.278483  0.078782  0.031265  0.596534\n",
       "\n",
       "[50000 rows x 7 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.080301</td>\n",
       "      <td>0.134267</td>\n",
       "      <td>0.287874</td>\n",
       "      <td>0.148930</td>\n",
       "      <td>0.042609</td>\n",
       "      <td>0.006130</td>\n",
       "      <td>0.078799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.712761</td>\n",
       "      <td>0.581813</td>\n",
       "      <td>0.548498</td>\n",
       "      <td>0.549938</td>\n",
       "      <td>0.382480</td>\n",
       "      <td>0.503788</td>\n",
       "      <td>0.727633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.106849</td>\n",
       "      <td>0.017848</td>\n",
       "      <td>0.029854</td>\n",
       "      <td>0.112837</td>\n",
       "      <td>0.066116</td>\n",
       "      <td>0.056761</td>\n",
       "      <td>0.135643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.460123</td>\n",
       "      <td>0.640385</td>\n",
       "      <td>0.765068</td>\n",
       "      <td>0.516972</td>\n",
       "      <td>0.202322</td>\n",
       "      <td>0.210486</td>\n",
       "      <td>0.505332</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.309510</td>\n",
       "      <td>0.330219</td>\n",
       "      <td>0.422271</td>\n",
       "      <td>0.287225</td>\n",
       "      <td>0.074299</td>\n",
       "      <td>0.024711</td>\n",
       "      <td>0.186387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49995</th>\n",
       "      <td>0.225573</td>\n",
       "      <td>0.496251</td>\n",
       "      <td>0.600471</td>\n",
       "      <td>0.368305</td>\n",
       "      <td>0.192817</td>\n",
       "      <td>0.006098</td>\n",
       "      <td>0.003733</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49996</th>\n",
       "      <td>0.293452</td>\n",
       "      <td>0.329144</td>\n",
       "      <td>0.366574</td>\n",
       "      <td>0.317674</td>\n",
       "      <td>0.282863</td>\n",
       "      <td>0.351503</td>\n",
       "      <td>0.219785</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49997</th>\n",
       "      <td>0.240963</td>\n",
       "      <td>0.270849</td>\n",
       "      <td>0.358293</td>\n",
       "      <td>0.301452</td>\n",
       "      <td>0.166044</td>\n",
       "      <td>0.329037</td>\n",
       "      <td>0.199648</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49998</th>\n",
       "      <td>0.109018</td>\n",
       "      <td>0.098117</td>\n",
       "      <td>0.093446</td>\n",
       "      <td>0.022168</td>\n",
       "      <td>0.006831</td>\n",
       "      <td>0.015912</td>\n",
       "      <td>0.023338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49999</th>\n",
       "      <td>0.222783</td>\n",
       "      <td>0.367280</td>\n",
       "      <td>0.361082</td>\n",
       "      <td>0.278483</td>\n",
       "      <td>0.078782</td>\n",
       "      <td>0.031265</td>\n",
       "      <td>0.596534</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>50000 rows × 7 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 5
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-01-18T13:44:16.151055Z",
     "start_time": "2025-01-18T13:44:16.148895Z"
    }
   },
   "cell_type": "code",
   "source": "",
   "id": "ab70b0bdf08b7eff",
   "outputs": [],
   "execution_count": null
  }
 ],
 "metadata": {
  "kernelspec": {
   "name": "python3",
   "language": "python",
   "display_name": "Python 3 (ipykernel)"
  }
 },
 "nbformat": 5,
 "nbformat_minor": 9
}
